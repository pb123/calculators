COUNT(*) AS signups, sum(has_made_deposit) AS funded_signups
FROM  datawarehouse.dm_user_infos ui
WHERE  signup_channel = 'SEO' AND user_investing_since_date >= '2014-01-01'
GROUP BY FROM_DAYS(TO_DAYS(user_investing_since_date) -MOD(TO_DAYS(user_investing_since_date) -1, 7))
ORDER BY FROM_DAYS(TO_DAYS(user_investing_since_date) -MOD(TO_DAYS(user_investing_since_date) -1, 7));"
x <- dbGetQuery(con, x_query)
head(x)
x
conv <- mean(x$funded_signups[c((dim(x)[1]-4):(dim(x)[1]-8))] / x$signups[c((dim(x)[1]-4):(dim(x)[1]-8))])
conv
x$predicted[c(dim(x)[1]:(dim(x)[1]-3))] <- conv*x$signups[c(dim(x)[1]:(dim(x)[1]-3))]
x
x$predicted <- x$funded_signups
x$predicted[c(dim(x)[1]:(dim(x)[1]-3))] <- conv*x$signups[c(dim(x)[1]:(dim(x)[1]-3))]
x <- x[-dim(x)[1],]
x$week_beginning <- as.Date(x$week_beginning)
plot(x$week_beginning, x$signups, type='l', ylim=c(0, max(x$signups)), xlab="Week Beginning",
ylab="Signups", xaxt="n", col=palette()[1])
axis(1, at=seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks"),
labels=format(c(seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks")), "%d %b"))
abline(h=25, lty=2)
text(x=max(x$week_beginning), y=25, labels="Target", pos=3, xpd=TRUE)
grid(NA, NULL, lwd = .3, lty=1, col=palette()[4])
addBMTTitle("SEO Weekly Funded Signups", cex=1.8)
x <- x[-dim(x)[1],]
x$week_beginning <- as.Date(x$week_beginning)
plot(x$week_beginning, x$funded_signups, type='l', ylim=c(0, max(x$signups)), xlab="Week Beginning",
ylab="Signups", xaxt="n", col=palette()[1])
axis(1, at=seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks"),
labels=format(c(seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks")), "%d %b"))
abline(h=25, lty=2)
text(x=max(x$week_beginning), y=25, labels="Target", pos=3, xpd=TRUE)
grid(NA, NULL, lwd = .3, lty=1, col=palette()[4])
addBMTTitle("SEO Weekly Funded Signups", cex=1.8)
x <- x[-dim(x)[1],]
x$week_beginning <- as.Date(x$week_beginning)
plot(x$week_beginning, x$predicted, type='l', ylim=c(0, max(x$signups)), xlab="Week Beginning",
ylab="Signups", xaxt="n", col=palette()[1])
axis(1, at=seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks"),
labels=format(c(seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks")), "%d %b"))
abline(h=25, lty=2)
text(x=max(x$week_beginning), y=25, labels="Target", pos=3, xpd=TRUE)
grid(NA, NULL, lwd = .3, lty=1, col=palette()[4])
addBMTTitle("SEO Weekly Funded Signups", cex=1.8)
addBMTDisclosure(paste0("Predicted based on full : funded rate of ", percent(conv)))
require(rga); require(BMTFxns); require(googleVis); require(RMySQL); require(scales)
addBMTDisclosure(paste0("Predicted based on full : funded rate of ", percent(conv)))
addBMTDisclosure(paste0("Predicted based on full : funded rate of ", percent(conv), "\nLast update", Sys.Date()))
x <- x[-dim(x)[1],]
x$week_beginning <- as.Date(x$week_beginning)
plot(x$week_beginning, x$predicted, type='l', ylim=c(0, max(x$signups)), xlab="Week Beginning",
ylab="Signups", xaxt="n", col=palette()[1])
axis(1, at=seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks"),
labels=format(c(seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks")), "%d %b"))
abline(h=25, lty=2)
text(x=max(x$week_beginning), y=25, labels="Target", pos=3, xpd=TRUE)
grid(NA, NULL, lwd = .3, lty=1, col=palette()[4])
addBMTTitle("SEO Weekly Funded Signups", cex=1.8)
addBMTDisclosure(paste0("Predicted based on full : funded rate of ", percent(conv), "\nLast update", Sys.Date()))
x <- dbGetQuery(con, x_query)
conv <- mean(x$funded_signups[c((dim(x)[1]-4):(dim(x)[1]-8))] / x$signups[c((dim(x)[1]-4):(dim(x)[1]-8))])
x$predicted <- x$funded_signups
x$predicted[c(dim(x)[1]:(dim(x)[1]-3))] <- conv*x$signups[c(dim(x)[1]:(dim(x)[1]-3))]
x <- x[-dim(x)[1],]
x$week_beginning <- as.Date(x$week_beginning)
plot(x$week_beginning, x$predicted, type='l', ylim=c(0, max(x$signups)), xlab="Week Beginning",
ylab="Signups", xaxt="n", col=palette()[1])
axis(1, at=seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks"),
labels=format(c(seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks")), "%d %b"))
abline(h=25, lty=2)
text(x=max(x$week_beginning), y=25, labels="Target", pos=3, xpd=TRUE)
grid(NA, NULL, lwd = .3, lty=1, col=palette()[4])
addBMTTitle("SEO Weekly Funded Signups", cex=1.8)
addBMTDisclosure(paste0("Predicted based on full : funded rate of ", percent(conv), "\nLast updated ", Sys.Date()))
text(x=max(x$week_beginning), y=25, labels="Target: 25", pos=3, xpd=TRUE)
x <- x[-dim(x)[1],]
x$week_beginning <- as.Date(x$week_beginning)
plot(x$week_beginning, x$predicted, type='l', ylim=c(0, max(x$signups)), xlab="Week Beginning",
ylab="Signups", xaxt="n", col=palette()[1])
axis(1, at=seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks"),
labels=format(c(seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks")), "%d %b"))
abline(h=25, lty=2)
text(x=max(x$week_beginning), y=25, labels="Target: 25", pos=3, xpd=TRUE)
grid(NA, NULL, lwd = .3, lty=1, col=palette()[4])
addBMTTitle("SEO Weekly Funded Signups", cex=1.8)
addBMTDisclosure(paste0("Predicted based on full : funded rate of ", percent(conv), "\nLast updated ", Sys.Date()))
x <- dbGetQuery(con, x_query)
conv <- mean(x$funded_signups[c((dim(x)[1]-4):(dim(x)[1]-8))] / x$signups[c((dim(x)[1]-4):(dim(x)[1]-8))])
x$predicted <- x$funded_signups
x$predicted[c(dim(x)[1]:(dim(x)[1]-3))] <- conv*x$signups[c(dim(x)[1]:(dim(x)[1]-3))]
x <- x[-dim(x)[1],]
x$week_beginning <- as.Date(x$week_beginning)
plot(x$week_beginning, x$predicted, type='l', ylim=c(0, max(x$signups)), xlab="Week Beginning",
ylab="Signups", xaxt="n", col=palette()[1])
axis(1, at=seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks"),
labels=format(c(seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks")), "%d %b"))
abline(h=25, lty=2)
text(x=max(x$week_beginning), y=25, labels="Target: 25", pos=3, xpd=TRUE)
grid(NA, NULL, lwd = .3, lty=1, col=palette()[4])
addBMTTitle("SEO Weekly Funded Signups", cex=1.8)
addBMTDisclosure(paste0("Predicted based on full : funded rate of ", percent(conv), "\nLast updated ", Sys.Date()))
max(x$week_beginning)
x$week_beginning <- as.Date(x$week_beginning)
plot(x$week_beginning, x$predicted, type='l', ylim=c(0, max(x$signups)), xlab="Week Beginning",
ylab="Signups", xaxt="n", col=palette()[1])
axis(1, at=seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks"),
labels=format(c(seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks")), "%d %b"))
abline(h=25, lty=2)
text(x=max(x$week_beginning)-7, y=25, labels="Target: 25", pos=3, xpd=TRUE)
grid(NA, NULL, lwd = .3, lty=1, col=palette()[4])
addBMTTitle("SEO Weekly Funded Signups", cex=1.8)
addBMTDisclosure(paste0("Predicted based on full : funded rate of ", percent(conv), "\nLast updated ", Sys.Date()))
addBMTDisclosure(paste0("Last updated ", Sys.Date(), " Predicted based on full : funded rate of ", percent(conv)))
x$week_beginning <- as.Date(x$week_beginning)
plot(x$week_beginning, x$predicted, type='l', ylim=c(0, max(x$signups)), xlab="Week Beginning",
ylab="Signups", xaxt="n", col=palette()[1])
axis(1, at=seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks"),
labels=format(c(seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks")), "%d %b"))
abline(h=25, lty=2)
text(x=max(x$week_beginning)-7, y=25, labels="Target: 25", pos=3, xpd=TRUE)
grid(NA, NULL, lwd = .3, lty=1, col=palette()[4])
addBMTTitle("SEO Weekly Funded Signups", cex=1.8)
addBMTDisclosure(paste0("Last updated ", Sys.Date(), ". Based on full : funded rate of ", percent(conv)))
BMTStyle()
p1 <- plot(organic_visits$week-1, organic_visits$newVisits, type='l',
ylim=c(4000, 1.1*max(organic_visits$newVisits)),
xaxt='n', xlab="Week End Date", ylab="New Visits per Week", col=palette()[1])
# axis labels show last date in week-long period of data collection
axis(1, at=1:dim(organic_visits)[1], labels=format(c(seq(from=as.Date("2014-01-12"), to=Sys.Date(), "weeks")), "%d %b"))
grid(NULL, NULL, lwd = .3, lty=1, col=palette()[4])
addBMTLogo()
addBMTTitle("Weekly Organic Search Traffic (Google.com)", cex=1.5)
addBMTDisclosure(paste0("Last updated: ", now()))
abline(h=10000, lty=2)
text(x=max(organic_visits$week), y=25, labels="Target: 25", pos=3, xpd=TRUE)
text(x=max(organic_visits$week), y=10000, labels="Target: 25", pos=3, xpd=TRUE)
text(x=max(organic_visits$week)-1, y=10000, labels="Target: 25", pos=3, xpd=TRUE)
text(x=max(organic_visits$week)-3, y=10000, labels="Target: 25", pos=3, xpd=TRUE)
p1 <- plot(organic_visits$week-1, organic_visits$newVisits, type='l',
ylim=c(4000, 1.1*max(organic_visits$newVisits)),
xaxt='n', xlab="Week End Date", ylab="New Visits per Week", col=palette()[1])
# axis labels show last date in week-long period of data collection
axis(1, at=1:dim(organic_visits)[1], labels=format(c(seq(from=as.Date("2014-01-12"), to=Sys.Date(), "weeks")), "%d %b"))
grid(NULL, NULL, lwd = .3, lty=1, col=palette()[4])
abline(h=10000, lty=2)
text(x=max(organic_visits$week)-3, y=10000, labels="Target: 25", pos=3, xpd=TRUE)
addBMTLogo()
addBMTTitle("Weekly Organic Search Traffic (Google.com)", cex=1.5)
addBMTDisclosure(paste0("Last updated: ", now()))
text(x=max(organic_visits$week)-3, y=10000, labels="Target: 10,000", pos=3, xpd=TRUE)
organic_visits <- organic_visits[-dim(organic_visits)[1],]
png(file="organic_search_traffic_week.png", width=600, height=350)
BMTStyle()
p1 <- plot(organic_visits$week-1, organic_visits$newVisits, type='l',
ylim=c(4000, 1.1*max(organic_visits$newVisits)),
xaxt='n', xlab="Week End Date", ylab="New Visits per Week", col=palette()[1])
# axis labels show last date in week-long period of data collection
axis(1, at=1:dim(organic_visits)[1], labels=format(c(seq(from=as.Date("2014-01-12"), to=Sys.Date(), "weeks")), "%d %b"))
grid(NULL, NULL, lwd = .3, lty=1, col=palette()[4])
abline(h=10000, lty=2)
text(x=max(organic_visits$week)-3, y=10000, labels="Target: 10,000", pos=3, xpd=TRUE)
addBMTLogo()
addBMTTitle("Weekly Organic Search Traffic (Google.com)", cex=1.5)
addBMTDisclosure(paste0("Last updated: ", now()))
dev.off()
BMTStyle()
p1 <- plot(organic_visits$week-1, organic_visits$newVisits, type='l',
ylim=c(4000, 1.1*max(organic_visits$newVisits)),
xaxt='n', xlab="Week End Date", ylab="New Visits per Week", col=palette()[1])
# axis labels show last date in week-long period of data collection
axis(1, at=1:dim(organic_visits)[1], labels=format(c(seq(from=as.Date("2014-01-12"), to=Sys.Date(), "weeks")), "%d %b"))
grid(NULL, NULL, lwd = .3, lty=1, col=palette()[4])
abline(h=10000, lty=2)
text(x=max(organic_visits$week)-3, y=10000, labels="Target: 10,000", pos=3, xpd=TRUE)
addBMTLogo()
addBMTTitle("Weekly Organic Search Traffic (Google.com)", cex=1.5)
addBMTDisclosure(paste0("Last updated: ", now()))
axis(1, at=1:dim(organic_visits)[1], labels=format(c(seq(from=as.Date("2014-01-12"), to=Sys.Date(), "weeks")), "%d %b"))
organic_visits <- ga$getData(id, start.date="2014-01-05",
metrics = "ga:newVisits", dimension="ga:week",
sort = "", filters = "ga:sourceMedium==google / organic", start = 1)
organic_visits$newVisits <- as.numeric(organic_visits$newVisits)
organic_visits$week <- as.numeric(organic_visits$week)
organic_visits <- organic_visits[-dim(organic_visits)[1],]
png(file="organic_search_traffic_week.png", width=600, height=350)
BMTStyle()
p1 <- plot(organic_visits$week-1, organic_visits$newVisits, type='l',
ylim=c(4000, 1.1*max(organic_visits$newVisits)),
xaxt='n', xlab="Week End Date", ylab="New Visits per Week", col=palette()[1])
# axis labels show last date in week-long period of data collection
axis(1, at=1:dim(organic_visits)[1], labels=format(c(seq(from=as.Date("2014-01-12"), to=Sys.Date(), "weeks")), "%d %b"))
grid(NULL, NULL, lwd = .3, lty=1, col=palette()[4])
abline(h=10000, lty=2)
text(x=max(organic_visits$week)-3, y=10000, labels="Target: 10,000", pos=3, xpd=TRUE)
addBMTLogo()
addBMTTitle("Weekly Organic Search Traffic (Google.com)", cex=1.5)
addBMTDisclosure(paste0("Last updated: ", now()))
dev.off()
BMTStyle()
p1 <- plot(organic_visits$week-1, organic_visits$newVisits, type='l',
ylim=c(4000, 1.1*max(organic_visits$newVisits)),
xaxt='n', xlab="Week End Date", ylab="New Visits per Week", col=palette()[1])
# axis labels show last date in week-long period of data collection
axis(1, at=1:dim(organic_visits)[1], labels=format(c(seq(from=as.Date("2014-01-12"), to=Sys.Date(), "weeks")), "%d %b"))
grid(NULL, NULL, lwd = .3, lty=1, col=palette()[4])
abline(h=10000, lty=2)
text(x=max(organic_visits$week)-3, y=10000, labels="Target: 10,000", pos=3, xpd=TRUE)
addBMTLogo()
addBMTTitle("Weekly Organic Search Traffic (Google.com)", cex=1.5)
addBMTDisclosure(paste0("Last updated: ", now()))
all_visits <- ga$getData(id, start.date="2014-01-05",
metrics = "ga:newVisits", dimension="ga:week",
sort = "", filters = "", start = 1)
all_visits$newVisits <- as.numeric(all_visits$newVisits)
all_visits$week <- as.numeric(all_visits$week)
all_visits <- all_visits[-dim(all_visits)[1],]
p1 <- plot(all_visits$week-1, all_visits$newVisits, type='l',
ylim=c(4000, 1.1*max(all_visits$newVisits)),
xaxt='n', xlab="Week End Date", ylab="New Visits per Week", col=palette()[1])
p1 <- plot(all_visits$week-1, all_visits$newVisits, type='l',
ylim=c(4000, 1.1*max(all_visits$newVisits)),
xaxt='n', xlab="Week End Date", ylab="New Visits per Week", col=palette()[1])
lines(organic_visits$week-1, organic_visits$newVisits, type='l', col=palette()[1])
y <- c(662,515,554,950,800,625,600,650,800,
1000,1100,1300)
dates <- seq(as.Date("2014-01-01"), as.Date("2014-12-31"), by="day")
y <- y[as.POSIXlt(dates)$mon+1]
y <- y[seq(1,365,7)]
y <- y[-length(y)]
dates <- dates[seq(7,365,7)]
# actual data
users_query <- "
SELECT Date(user_investing_since_date) date,
Count(*)                        signups,
Sum(is_funded_user)             funded_signups
FROM   datawarehouse.dm_user_infos
WHERE  user_investing_since_date >= '2014-01-01'
GROUP  BY DATE;
"
users <- dbGetQuery(con, users_query)
users$date <- as.Date(users$date)
users <- users[-c(dim(users)[1]), ]
users$predicted <- users$funded_signups
# full to funded conversion estimate
conv <- mean(users$funded_signups[c((dim(users)[1]-30):(dim(users)[1]-60))] / users$signups[c((dim(users)[1]-30):(dim(users)[1]-60))])
users$predicted[c(dim(users)[1]:(dim(users)[1]-29))] <- conv*users$signups[c(dim(users)[1]:(dim(users)[1]-29))]
users$week_end <- rep(dates, each=7)[1:dim(users)[1]]
y <- c(662,515,554,950,800,625,600,650,800,
1000,1100,1300)
dates <- seq(as.Date("2014-01-01"), as.Date("2014-12-31"), by="day")
y <- y[as.POSIXlt(dates)$mon+1]
y <- y[seq(1,365,7)]
y <- y[-length(y)]
dates <- dates[seq(7,365,7)]
# actual data
users_query <- "
SELECT Date(user_investing_since_date) date,
Count(*)                        signups,
Sum(is_funded_user)             funded_signups
FROM   datawarehouse.dm_user_infos
WHERE  user_investing_since_date >= '2014-01-01'
GROUP  BY DATE;
"
users <- dbGetQuery(con, users_query)
users$date <- as.Date(users$date)
users <- users[-c(dim(users)[1]), ]
users$predicted <- users$funded_signups
# full to funded conversion estimate
conv <- mean(users$funded_signups[c((dim(users)[1]-30):(dim(users)[1]-60))] / users$signups[c((dim(users)[1]-30):(dim(users)[1]-60))])
users$predicted[c(dim(users)[1]:(dim(users)[1]-29))] <- conv*users$signups[c(dim(users)[1]:(dim(users)[1]-29))]
users$week_end <- rep(dates, each=7)[1:dim(users)[1]]
con <- dbCon(config$betterment.db.clientanalytics$name, config$betterment.db.clientanalytics$username,
config$betterment.db.clientanalytics$password, config$betterment.db.clientanalytics$host,
config$betterment.db.clientanalytics$port)
library(BMTFxns)
# goal data
y <- c(662,515,554,950,800,625,600,650,800,
1000,1100,1300)
dates <- seq(as.Date("2014-01-01"), as.Date("2014-12-31"), by="day")
y <- y[as.POSIXlt(dates)$mon+1]
y <- y[seq(1,365,7)]
y <- y[-length(y)]
dates <- dates[seq(7,365,7)]
# actual data
users_query <- "
SELECT Date(user_investing_since_date) date,
Count(*)                        signups,
Sum(is_funded_user)             funded_signups
FROM   datawarehouse.dm_user_infos
WHERE  user_investing_since_date >= '2014-01-01'
GROUP  BY DATE;
"
users <- dbGetQuery(con, users_query)
users$date <- as.Date(users$date)
users <- users[-c(dim(users)[1]), ]
users$predicted <- users$funded_signups
# full to funded conversion estimate
conv <- mean(users$funded_signups[c((dim(users)[1]-30):(dim(users)[1]-60))] / users$signups[c((dim(users)[1]-30):(dim(users)[1]-60))])
users$predicted[c(dim(users)[1]:(dim(users)[1]-29))] <- conv*users$signups[c(dim(users)[1]:(dim(users)[1]-29))]
users$week_end <- rep(dates, each=7)[1:dim(users)[1]]
users <- ddply(users, .(week_end), summarise, funded_signups=sum(funded_signups), predicted=sum(predicted))
y <- c(0,800, 700, 1140)
dates <- seq(as.Date("2014-01-01"), as.Date("2014-12-31"), by="day")
quarter <- rep(4, length(dates))
quarter[which(dates < "2014-10-01")] <- 3
quarter[which(dates < "2014-07-01")] <- 2
quarter[which(dates < "2014-04-01")] <- 1
y <- y[quarter]
y <- y[seq(1,length(y),7)]
y <- y[-length(y)]
dates <- dates[seq(7,length(dates),7)]
# actual data
users_query <- "
SELECT Date(user_investing_since_date) date,
Count(*)                        signups,
Sum(is_funded_user)             funded_signups
FROM   datawarehouse.dm_user_infos
WHERE  user_investing_since_date >= '2014-01-01'
GROUP  BY DATE;
"
users <- dbGetQuery(con, users_query)
users$date <- as.Date(users$date)
users <- users[-c(dim(users)[1]), ]
users$predicted <- users$funded_signups
conv <- mean(users$funded_signups[c((dim(users)[1]-30):(dim(users)[1]-60))] / users$signups[c((dim(users)[1]-30):(dim(users)[1]-60))])
users$predicted[c(dim(users)[1]:(dim(users)[1]-29))] <- conv*users$signups[c(dim(users)[1]:(dim(users)[1]-29))]
users$week_end <- rep(dates, each=7)[1:dim(users)[1]]
users <- ddply(users, .(week_end), summarise, funded_signups=sum(funded_signups), predicted=sum(predicted))
users <- users[-dim(users)[1], ]
BMTStyle()
mons <- seq(as.Date("2014-01-01"), as.Date("2014-12-31"), by="month")
p <- plot(dates, y, ylim=c(0, max(y)*1.2), type='l', col="white", xaxt="n",
xlab="Date", ylab="Funded Signups/week")
axis(1, at=as.numeric(mons), labels=format(mons, "%b"))
lines(x=users$week_end, y=users$funded_signups, col=palette()[3])
lines(x=users$week_end, y=users$predicted, col=palette()[3], lty=2)
lines(dates[-c(1:13)], y[-c(1:13)], col=palette()[1])
legend("bottomright", legend=c("Target", "Actual", "Predicted"), bty="n", border=NULL, lty=c(1,1,3), lwd=3,
col=palette()[c(1,3,3)])
addBMTTitle("TEAM ACQUIRE OKR")
addBMTDisclosure(paste0("Predicted based on full : funded rate of ", percent(conv)))
png(file="acquire_OKR.png", width=850, height=500)
BMTStyle()
mons <- seq(as.Date("2014-01-01"), as.Date("2014-12-31"), by="month")
p <- plot(dates, y, ylim=c(0, max(y)*1.2), type='l', col="white", xaxt="n",
xlab="Date", ylab="Funded Signups/week")
axis(1, at=as.numeric(mons), labels=format(mons, "%b"))
lines(x=users$week_end, y=users$funded_signups, col=palette()[3])
lines(x=users$week_end, y=users$predicted, col=palette()[3], lty=2)
lines(dates[-c(1:13)], y[-c(1:13)], col=palette()[1])
legend("bottomright", legend=c("Target", "Actual", "Predicted"), bty="n", border=NULL, lty=c(1,1,3), lwd=3,
col=palette()[c(1,3,3)])
addBMTTitle("TEAM ACQUIRE OKR")
addBMTDisclosure(paste0("Predicted based on full : funded rate of ", percent(conv)))
dev.off()
png(file="seo_signups.png", width=600, height=350)
x$week_beginning <- as.Date(x$week_beginning)
plot(x$week_beginning, x$predicted, type='l', ylim=c(0, max(x$signups)), xlab="Week Beginning",
ylab="Signups", xaxt="n", col=palette()[1])
axis(1, at=seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks"),
labels=format(c(seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks")), "%d %b"))
abline(h=25, lty=2)
text(x=max(x$week_beginning)-7, y=25, labels="Target: 25", pos=3, xpd=TRUE)
grid(NA, NULL, lwd = .3, lty=1, col=palette()[4])
addBMTTitle("SEO Weekly Funded Signups", cex=1.8)
addBMTDisclosure(paste0("Last updated ", Sys.Date(), ". Based on full : funded rate of ", percent(conv)))
dev.off()
png(file="seo_signups.png", width=600, height=350)
BMTStyle()
x$week_beginning <- as.Date(x$week_beginning)
plot(x$week_beginning, x$predicted, type='l', ylim=c(0, max(x$signups)), xlab="Week Beginning",
ylab="Signups", xaxt="n", col=palette()[1])
axis(1, at=seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks"),
labels=format(c(seq(from=min(x$week_beginning), to=max(x$week_beginning), "weeks")), "%d %b"))
abline(h=25, lty=2)
text(x=max(x$week_beginning)-7, y=25, labels="Target: 25", pos=3, xpd=TRUE)
grid(NA, NULL, lwd = .3, lty=1, col=palette()[4])
addBMTTitle("SEO Weekly Funded Signups", cex=1.8)
addBMTDisclosure(paste0("Last updated ", Sys.Date(), ". Based on full : funded rate of ", percent(conv)))
dev.off()
exp(999999)
2377*2
2377*2*12
1900*(50/32)
library(dev_tools)
library(devttools)
library(devtools)
library(shiny)
setwd("~/Documents/bet/shiny")
?numericInput
runApp("~/Documents/bet/shiny")
runApp("~/Documents/bet/shiny")
runApp("~/Documents/bet/shiny")
?shinyUI
runApp("~/Documents/bet/shiny")
runApp("~/Documents/bet/shiny")
runApp("~/Documents/bet/shiny")
x <- read.csv("~/Dropbox/Client Analytics/Patrick/growth/acquire/signup_channel.csv", as.is=TRUE)
head(x)
library(ggplot)
library(ggplot2)
?ggplot
x$DATE <- as.Date(x$DATE)
ggplot(x, aes(x=DATE, y=num_users, col=signup_channel))
ggplot(x, aes(x=DATE, y=num_users, col=signup_channel)) + geom_line
ggplot(x, aes(x=DATE, y=num_users, col=signup_channel)) + geom_line()
ddply(x, .(signup_channel), mutate, cum=cumsum(num_users))
library(ggplot2); library(plyr)
x$cum <- ddply(x, .(signup_channel), mutate, cum=cumsum(num_users))
ddply(x, .(signup_channel), mutate, cum=cumsum(num_users))
ddply(x, .(signup_channel), mutate, cum=cumsum(num_users))
x$cum
head(x)
head(x. 20)
head(x, 20)
x <- read.csv("~/Dropbox/Client Analytics/Patrick/growth/acquire/signup_channel.csv", as.is=TRUE)
x$DATE <- as.Date(x$DATE)
x$cum <- ddply(x, .(signup_channel), summarise, cum=cumsum(num_users))
head(x, 20)
x <- read.csv("~/Dropbox/Client Analytics/Patrick/growth/acquire/signup_channel.csv", as.is=TRUE)
x$DATE <- as.Date(x$DATE)
x$cum <- ddply(x, .(signup_channel, DATE), summarise, cum=cumsum(num_users))
head(x, 20)
x <- read.csv("~/Dropbox/Client Analytics/Patrick/growth/acquire/signup_channel.csv", as.is=TRUE)
x$DATE <- as.Date(x$DATE)
x <- ddply(x, .(signup_channel, DATE), summarise, cum=cumsum(num_users), num=num_users)
head(x, 20)
x <- ddply(x, .(DATE, signup_channel), summarise, cum=cumsum(num_users), num=num_users)
x <- read.csv("~/Dropbox/Client Analytics/Patrick/growth/acquire/signup_channel.csv", as.is=TRUE)
x$DATE <- as.Date(x$DATE)
x$DATE <- as.Date(x$DATE)
x <- ddply(x, .(DATE, signup_channel), summarise, cum=cumsum(num_users), num=num_users)
head(x, 20)
?cumsum
x <- ddply(x, .(DATE, signup_channel), summarise, cum=cumsum(num_users), num=mean(num_users))
x <- read.csv("~/Dropbox/Client Analytics/Patrick/growth/acquire/signup_channel.csv", as.is=TRUE)
x <- ddply(x, .(DATE, signup_channel), summarise, cum=cumsum(num_users), num=mean(num_users))
head(x, 20)
x <- read.csv("~/Dropbox/Client Analytics/Patrick/growth/acquire/signup_channel.csv", as.is=TRUE)
x$DATE <- as.Date(x$DATE)
x <- ddply(x, .(signup_channel), summarise, cum=cumsum(num_users), num=(num_users))
head(x, 20)
x <- ddply(x, .(signup_channel), summarise, date=mean(date), cum=cumsum(num_users), num=(num_users))
x <- read.csv("~/Dropbox/Client Analytics/Patrick/growth/acquire/signup_channel.csv", as.is=TRUE)
x$DATE <- as.Date(x$DATE)
x <- ddply(x, .(signup_channel), summarise, date=mean(date), cum=cumsum(num_users), num=(num_users))
x <- ddply(x, .(signup_channel), summarise, date=DATE, cum=cumsum(num_users), num=(num_users))
x <- read.csv("~/Dropbox/Client Analytics/Patrick/growth/acquire/signup_channel.csv", as.is=TRUE)
x$DATE <- as.Date(x$DATE)
x <- ddply(x, .(signup_channel), summarise, date=DATE, cum=cumsum(num_users), num=(num_users))
head(x, 20)
ggplot(x, aes(x=DATE, y=cum, col=signup_channel)) + geom_line()
ggplot(x, aes(x=date, y=cum, col=signup_channel)) + geom_line()
ggplot(x, aes(x=date, y=cum, col=signup_channel)) + geom_line() + geom_text(data = x[x$date == "2014-05-01",
], aes(label = signup_channel), hjust = 0.7, vjust = 1)
ggplot(x, aes(x=date, y=cum, col=signup_channel)) + geom_line() +
geom_text(data = x[x$date == "2014-05-01",], aes(label = signup_channel), hjust = 0.7, vjust = 1) +
opts(legend.position = "none")
ggplot(x, aes(x=date, y=cum, col=signup_channel)) + geom_line() +
geom_text(data = x[x$date == "2014-05-01",], aes(label = signup_channel), hjust = 0.7, vjust = 0) +
opts(legend.position = "none")
ggplot(x, aes(x=date, y=cum, col=signup_channel), xlab="") + geom_line() +
geom_text(data = x[x$date == "2014-05-01",], aes(label = signup_channel), hjust = 0.7, vjust = 0) +
opts(legend.position = "none")
con <- dbCon("bettermentdb", "betterment-web")
source("~/Documents/bet/code/dbcon.R")
con <- dbCon("bettermentdb", "betterment-web")
x <- dbGetQuery(con, "select current_balance from datawarehouse.dm_user_infos where is_funded_user =1;")
x <- dbGetQuery(con, "select user_current_balance from datawarehouse.dm_user_infos where is_funded_user =1;")
head(x)
plot(density(x))
plot(density(x$user_current_balance))
library(BMTFxns)
BMTStyle()
plot(density(x$user_current_balance))
plot(density(x$user_current_balance), main="")
y <- x[sample(1:dim(x)[1], 1000),]
plot(density(y$user_current_balance), main="")
head(y)
plot(density(y), main="")
plot(density(log(y)), main="")
qqnorm(density(log(y)))
qqnorm((log(y)))
plot(density(y), main="")
plot(density(log(y)), main="")
par(mfrow=c(1,2))
plot(density(y), main="Raw")
plot(density(log(y)), main="Log")
plot(density(y), main="Raw", xaxt="n")
axis(2, at=axTicks(2), labels=sprintf("$%s", axTicks(2)))
plot(density(y), main="Raw", xaxt="n")
axis(1, at=axTicks(1), labels=sprintf("$%s", axTicks(1)))
par(mfrow=c(1,2))
plot(density(y), main="Raw", xaxt="n")
axis(1, at=axTicks(1), labels=sprintf("$%s", axTicks(1)))
axis(1, at=axTicks(1), labels=sprintf("$%s", exp(axTicks(1))))
plot(density(log(y)), main="Log", xaxt='n')
axis(1, at=axTicks(1), labels=sprintf("$%s", exp(axTicks(1))))
plot(density(log(y)), main="Log", xaxt='n')
axis(1, at=axTicks(1), labels=sprintf("$%s", round2(exp(axTicks(1)))))
axis(1, at=log(c(1,10,100,1000,10000,100000)), labels=sprintf("$%s", round2(c(1,10,100,1000,10000,100000))))
par(mfrow=c(1,2))
plot(density(y), main="Raw", xaxt="n")
axis(1, at=axTicks(1), labels=sprintf("$%s", axTicks(1)))
plot(density(log(y)), main="Log", xaxt='n')
axis(1, at=log(c(1,10,100,1000,10000,100000)), labels=sprintf("$%s", round2(c(1,10,100,1000,10000,100000))))
?plot.density
par(mfrow=c(1,2))
plot(density(y), main="Raw", xaxt="n", xlab="Deposit")
axis(1, at=axTicks(1), labels=sprintf("$%s", axTicks(1)))
plot(density(log(y)), main="Log", xaxt='n', xlab="Deposit")
axis(1, at=log(c(1,10,100,1000,10000,100000)), labels=sprintf("$%s", round2(c(1,10,100,1000,10000,100000))))
